{"version":3,"sources":["App/App.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Title/Title.styled.js","components/Title/Title.js","App/App.js","index.js"],"names":["Main","styled","main","Section","section","MainTitle","h1","Form","form","Label","label","Input","input","Button","button","ContactForm","state","contacts","name","number","nameId","uuidv4","telId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","htmlFor","id","type","onChange","pattern","title","placeholder","required","Component","List","ul","Item","li","ContactList","onDelete","map","onClick","Filter","filterValue","SectionTitle","h2","Title","App","filter","addContact","find","contact","toLowerCase","alert","newContact","checkContact","includes","filterContact","e","removeContact","contactId","prev","savedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b085adc8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-between;\ntext-align: center;\nmargin: 20px auto;\npadding: 20px;\nbackground-color: #fff;\nwidth: 900px;\nbox-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Section = styled.section`\n  /* padding: 40px 0; */\n`;\nexport const MainTitle = styled.h1`\n  width: 900px;\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #9e1878;\n`;","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\nheight: 40px;\nborder: 1px solid #ff0d82;\nborder-radius: 4px;\nfont-size: 16px;\nmargin-top: 10px;\n&:focus {\n    outline: none;\n    border: 1px solid #9e1878;\n}\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #ff0d82;\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n  border: none;\n  \n`;","import { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nexport class ContactForm extends Component {\n    state = {\n        contacts: [],\n        name: \"\",\n        number: \"\"\n    };\n\n    nameId = uuidv4();\n    telId = uuidv4();\n\n    handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({ [name]: value });\n    };\n    \n    handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n   };\n\n   resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n   };\n    \n   render() {\n       const { name, number } = this.state;\n       \n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label htmlFor={this.nameId}> Name\n          <Input\n            id={this.nameId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter contact name\"\n            required\n          />\n        </Label>\n\n        <Label htmlFor={this.telId}> Phone Number\n          <Input\n            id={this.telId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func,\n};\n\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 800px;\n\n`;\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nmargin-bottom: 25px;\nfont-size: 24px;\n\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #ff0d82;\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n  border: none;\n \n`;","import PropTypes from \"prop-types\";\nimport { List, Item, Button } from \"./ContactList.styled\";\n\nexport function ContactList({contacts, onDelete}) {\n    return (\n        <List>\n            {contacts.map(({id, name, number}) => (\n                <Item key={id}>\n                    {name}: {number}\n                    <Button\n                        onClick={() => onDelete(id)}>\n                        Delete\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n    })),\n    // onDelete: PropTypes.func,\n}\n\n// export default ContactList;","import styled from \"@emotion/styled/macro\";\n\nexport const Input = styled.input`\n  border: 1px solid #ff0d82;\n  border-radius: 4px;\n  font-size: 16px;\n  height: 40px;\n  margin-top: 10px;\n  &:focus {\n      outline: none;\n      border: 1px solid #9e1878;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n\n`;","import PropTypes from \"prop-types\";\nimport { Label, Input } from \"./Filter.styled\";\n\nexport function Filter({ filterValue, onChange }) {\n    return (\n        <Label>Find contacts by name\n            <Input\n                type=\"text\"\n                filterValue={filterValue}\n                onChange={onChange}\n                placeholder=\"Enter contact name\"/>\n        </Label>\n    )\n}\n\nFilter.propTypes = {\n    filterValue: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\n// export default Filter;","import styled from \"@emotion/styled\";\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #9e1878;\n`;\n","import PropTypes from \"prop-types\";\nimport { SectionTitle } from \"./Title.styled\";\n\nexport function Title({ title }) {\n    return (\n         <SectionTitle>{title}</SectionTitle>\n    )\n}\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport contacts from \"../data/contacts.json\";\nimport { Main, Section, MainTitle } from './App.styled';\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { Title } from \"../components/Title/Title\";\n\nexport default class App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n  if (this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return\n    }\n  const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n  this.setState(({contacts}) => (\n    {\n      contacts: [newContact, ...contacts]\n    }))\n  };\n\n  checkContact = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  filterContact = (e) => {\n    this.setState({ filter: e.currentTarget.value })\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId)\n    }))\n  };\n\n  componentDidMount() {\n    const savedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts })\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n\n  render() {\n    return (\n      <Main>\n        <MainTitle>Phonebook</MainTitle>\n        <Section>\n          <Title title={\"Add contact\"} />\n          <ContactForm\n            onSubmit={this.addContact} />   \n        </Section>\n        <Section>\n          <Title title=\"Search contact\" />\n          <Filter\n            filterValue={this.state.filter}\n            onChange={this.filterContact} />\n        </Section>\n        <Section>\n          <Title title=\"Contacts list\"/>\n          <ContactList\n            contacts={this.checkContact()}\n            onDelete={this.removeContact} />\n        </Section>\n      </Main>\n    )\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}